{"version":3,"sources":["main.ts"],"names":[],"mappings":";;AAAA,iCAAmC;AACnC,uBAAyB;AACzB,2BAA6B;AAC7B,wCAA0C;AAC1C,2BAA6B;AAG7B,IAAI,YAAoB,CAAC;AACzB,IAAI,IAAuB,CAAC;AAC5B,IAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,GAAG,EAAE,GAAG;IACjC,YAAY,GAAG,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvF,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC1B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7F,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IACD,YAAY,EAAE,CAAC;IACf,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,CAAC;IAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;IAC/D,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAuB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACtF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC;AAEH,IAAM,IAAI,GAAG,IAAI,CAAC;AAClB,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE;IACjD,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,CAAC;IAC9C,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,UAAA,GAAG;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["import * as express from 'express';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as bodyparser from 'body-parser';\r\nimport * as http from 'http';\r\nimport * as itf from './serialnumber';\r\n\r\nlet serialnumber: number;\r\nlet file: itf.Serialnumbers;\r\nconst app = express();\r\napp.use(bodyparser.json());\r\napp.post('/serialnumber', (req, res) => {\r\n  serialnumber = parseInt(fs.readFileSync(path.join(__dirname, '../number')).toString());\r\n  console.log(serialnumber);\r\n  file = JSON.parse(fs.readFileSync(path.join(__dirname, '../serialnumbers.json')).toString());\r\n  for (let i = 0; i < file.devices.length; i++) {\r\n    if (file.devices[i].mac === req.body.mac) {\r\n      return res.send(file.devices[i].number.toString() + '\\n');\r\n    }\r\n  }\r\n  serialnumber++;\r\n  fs.writeFileSync(path.join(__dirname, '../number'), serialnumber);\r\n  file.devices.push({ mac: req.body.mac, number: serialnumber });\r\n  fs.writeFileSync(path.join(__dirname, '../serialnumbers.json'), JSON.stringify(file));\r\n  return res.send(serialnumber.toString() + '\\n');\r\n});\r\n\r\nconst port = 2525;\r\nconst server = http.createServer(app).listen(port, () => {\r\n  console.log('Server running on port ' + port);\r\n  server.on('close', () => {\r\n    console.log('Server stopped.');\r\n  });\r\n  server.on('err', err => {\r\n    console.log(err);\r\n  });\r\n});\r\n"],"sourceRoot":"Z:\\Git\\fuettr_prototype\\Web_Application\\Serialnumber"}